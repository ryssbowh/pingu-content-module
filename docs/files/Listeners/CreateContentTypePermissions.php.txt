<?php

namespace Pingu\Content\Listeners;

use Illuminate\Contracts\Queue\ShouldQueue;
use Illuminate\Queue\InteractsWithQueue;
use Illuminate\Support\Str;
use Pingu\Content\Entities\Content;
use Pingu\Menu\Entities\Menu;
use Pingu\Menu\Entities\MenuItem;
use Pingu\Permissions\Entities\Permission;

class CreateContentTypePermissions
{
    /**
     * Create the event listener.
     *
     * @return void
     */
    public function __construct()
    {
        //
    }

    /**
     * Handle the event.
     * Creates all permissions associated to this content type (config content.content_type_permissions)
     *
     * @param  object  $event
     * @return void
     */
    public function handle($event)
    {
        $contentType = $event->contentType;
        $perms = \Permissions::decodeContentTypePermsConfig($contentType);
        foreach($perms as $perm){
            Permission::create(['name' => $perm, 'section' => 'Content']);
        }
        $menu = Menu::findByName('admin-menu');
        $item = MenuItem::findByName('admin-menu.content.create');
        $create = Permission::findByName('create '.$contentType->machineName. ' contents');
        if($item){
            MenuItem::create([
                'name' => $contentType->name,
                'url' => Content::transformAdminUri('create',[$contentType], true),
                'active' => 1,
                'permission_id' => $create ? $create->id : null
            ], $menu, $item);
        }
    }
}

